<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>clif</string>
	</array>
	<key>name</key>
	<string>Clif</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#multiline_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_quoted_double</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(namespace)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.namespace.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif namespace</string>
			<key>end</key>
			<string>(\:)|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.namespace.begin.clif</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.incorrect-namespace-name.clif</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.namespace.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#namespace</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(staticmethods\s+from)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.staticmethods.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif static methods</string>
			<key>end</key>
			<string>(\:)|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.namespace.begin.clif</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.staticmethods.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#namespace</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.clif</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif capsule</string>
			<key>match</key>
			<string>^\s*(capsule)\s+(\`[A-Za-z_][A-Za-z0-9_]*\`\s*(as))?\s*([A-Za-z_][A-Za-z0-9_]*)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(use)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif use</string>
			<key>contentName</key>
			<string>entity.name.type.clif</string>
			<key>end</key>
			<string>$\n?</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cclass</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#types</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(\`[A-Za-z_][A-Za-z0-9_]*\`\s*(as))?\s*([A-Za-z_][A-Za-z0-9_]*)\s*(?=\:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.clif</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif variable</string>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>meta.other.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\:)</string>
					<key>contentName</key>
					<string>entity.name.type.clif</string>
					<key>end</key>
					<string>(?=\=|$\n?)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\`[A-Za-z_][A-Za-z0-9_]*\`</string>
							<key>name</key>
							<string>entity.name.type.clif</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\b(as)\b)</string>
							<key>name</key>
							<string>keyword.other.clif</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\=\s*(property))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.clif</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.clif</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.clif</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.other.clif</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cclass</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(const)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif constant</string>
			<key>end</key>
			<string>($\n?)</string>
			<key>name</key>
			<string>meta.other.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\`[A-Za-z_][A-Za-z0-9_]*\`</string>
					<key>name</key>
					<string>constant.c.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([A-Za-z_][A-Za-z0-9_]*)</string>
					<key>name</key>
					<string>constant.python.clif</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\:)</string>
					<key>end</key>
					<string>(?=$\n?)</string>
					<key>name</key>
					<string>meta.other.clif</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\`[A-Za-z_][A-Za-z0-9_]*\`)</string>
							<key>name</key>
							<string>entity.name.type.clif</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(as)\b</string>
							<key>name</key>
							<string>keyword.other.clif</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(enum)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif enum</string>
			<key>end</key>
			<string>((with)\s*:) | ($\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.other.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cclass</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>([A-Za-z_][A-Za-z0-9_]*)</string>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.clif</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif enum values</string>
			<key>match</key>
			<string>^\s*(\`[A-Za-z_][A-Za-z0-9_]*\`)\s*(as)\s*([A-Za-z_][A-Za-z0-9_]*)\s*$</string>
			<key>name</key>
			<string>meta.other.clif</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif class</string>
			<key>end</key>
			<string>(\:)|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.clif</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.clif</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cclass</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.clif</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_class</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.inheritance.begin.clif</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\)|:)</string>
					<key>name</key>
					<string>meta.class.inheritance.clif</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\(|,)\s*</string>
							<key>contentName</key>
							<string>entity.other.inherited-class.clif</string>
							<key>end</key>
							<string>\s*(?:(,)|(?=\)))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.clif</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(def)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif functions</string>
			<key>end</key>
			<string>($\n?)</string>
			<key>name</key>
			<string>meta.function.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cfunction</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.clif</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#tuples</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(-\&gt;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.class.clif</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=$\n?)</string>
					<key>name</key>
					<string>meta.function.returnvalue.clif</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cclass</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(as)\b</string>
							<key>name</key>
							<string>keyword.other.clif</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#tuples</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\@[A-Za-z_][A-Za-z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.decorator.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif decorator</string>
			<key>end</key>
			<string>($\n?)</string>
			<key>name</key>
			<string>meta.function.decorator.clif</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>cclass</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\`\s*[A-Za-z_][A-Za-z0-9_]*\s*(&lt;\s*([A-Za-z_][A-Za-z0-9_]*(::[A-Za-z_][A-Za-z0-9_]*)*)\s*(,\s*[A-Za-z_][A-Za-z0-9_]*(::[A-Za-z_][A-Za-z0-9_]*)*\s*)*&gt;\s*)?\`)</string>
					<key>name</key>
					<string>string.quoted.single.clif</string>
				</dict>
			</array>
		</dict>
		<key>cfunction</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\`\s*(([A-Za-z_][A-Za-z0-9_]*(::[A-Za-z_][A-Za-z0-9_]*)*)|(operator([-*&amp;&lt;&gt;=+!]|\(\)|\[\])))\s*\`</string>
					<key>name</key>
					<string>string.quoted.single.clif</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#.*</string>
					<key>name</key>
					<string>comment.line.number-sign.clif</string>
				</dict>
			</array>
		</dict>
		<key>entity_name_class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_function_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>([A-Za-z_][A-Za-z0-9_]*)</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield|await)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.python.clif</string>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(from)\b</string>
					<key>name</key>
					<string>keyword.control.import.from.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(import)\b</string>
					<key>name</key>
					<string>keyword.control.import.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(pass|return)\b</string>
					<key>name</key>
					<string>keyword.control.statement.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(as|enum|const)\b</string>
					<key>name</key>
					<string>keyword.other.clif</string>
				</dict>
			</array>
		</dict>
		<key>magic_function_names</key>
		<dict>
			<key>comment</key>
			<string>these methods have magic interpretation by python and are generally called indirectly through syntactic constructs</string>
			<key>match</key>
			<string>(?x)\b(__(?:abs|add|and|bool|bytes|call|cmp|coerce|complex|contains|del|delattr|delete|delitem|delslice|dir|div|divmod|enter|eq|exit|float|floordiv|format|ge|get|getattr|getattribute|getitem|getslice|gt|hash|hex|iadd|iand|idiv|ifloordiv|ilshift|imatmul|imod|imul|index|init|instancecheck|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|length_hint|long|lshift|lt|matmul|missing|mod|mul|ne|neg|next|new|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|repr|reversed|rfloordiv|rlshift|rmatmul|rmod|rmul|ror|round|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|setslice|str|sub|subclasscheck|truediv|unicode|xor)__)\b</string>
			<key>name</key>
			<string>support.function.magic.python.clif</string>
		</dict>
		<key>multiline_string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\"\"\")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.clif</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>multi-line strings</string>
					<key>end</key>
					<string>(\"\"\")</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.clif</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.triple.multi-line.clif</string>
				</dict>
			</array>
		</dict>
		<key>namespace</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\`[A-Za-z_][A-Za-z0-9_]*(::[A-Za-z_][A-Za-z0-9_]*)*\`)</string>
					<key>name</key>
					<string>string.quoted.single.clif</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.clif</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Double quoted string</string>
					<key>end</key>
					<string>((?&lt;=\")(\")|\")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.clif</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.clif</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.clif</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.clif</string>
				</dict>
			</array>
		</dict>
		<key>tuples</key>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.clif</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Clif tuples / parameter list</string>
			<key>end</key>
			<string>(\))</string>
			<key>name</key>
			<string>meta.function.parameters.clif</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(self)</string>
					<key>name</key>
					<string>variable.parameter.parameter.function.language.clif</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>punctuation.separator.parameters.clif</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([A-Za-z_][A-Za-z0-9_]*)\s*(\:)(?!\:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.arguments.clif</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.clif</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.type.clif</string>
					<key>end</key>
					<string>\s*(?=(,)|\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#cclass</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(as)\b</string>
							<key>name</key>
							<string>keyword.other.clif</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#types</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\s*(\=)\s*</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.assignment.clif</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\s*(?=(,)|\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(default)</string>
									<key>name</key>
									<string>variable.parameter.parameter.function.language.clif</string>
								</dict>
								<dict>
									<key>match</key>
									<string>([A-Za-z_][A-Za-z0-9_]*)</string>
									<key>name</key>
									<string>variable.parameter.parameter.function.clif</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)\b(int|bytes|str|bool|float|list|tuple|set|dict|object)\b</string>
					<key>name</key>
					<string>support.type.clif</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.clif</string>
	<key>uuid</key>
	<string>67b6678b-acbd-4efc-9cd0-99484cd09ab5</string>
</dict>
</plist>
